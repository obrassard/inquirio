/*
 * This file is generated by jOOQ.
 */
package ca.obrassard.jooqentities.tables.records;


import ca.obrassard.jooqentities.tables.Users;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsersRecord extends UpdatableRecordImpl<UsersRecord> implements Record7<Integer, String, String, String, Integer, Double, String> {

    private static final long serialVersionUID = -746276993;

    /**
     * Setter for <code>inquirio.users.Id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>inquirio.users.Id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>inquirio.users.Name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>inquirio.users.Name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>inquirio.users.Email</code>.
     */
    public void setEmail(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>inquirio.users.Email</code>.
     */
    public String getEmail() {
        return (String) get(2);
    }

    /**
     * Setter for <code>inquirio.users.Telephone</code>.
     */
    public void setTelephone(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>inquirio.users.Telephone</code>.
     */
    public String getTelephone() {
        return (String) get(3);
    }

    /**
     * Setter for <code>inquirio.users.ItemsFoundCount</code>.
     */
    public void setItemsfoundcount(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>inquirio.users.ItemsFoundCount</code>.
     */
    public Integer getItemsfoundcount() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>inquirio.users.Rating</code>.
     */
    public void setRating(Double value) {
        set(5, value);
    }

    /**
     * Getter for <code>inquirio.users.Rating</code>.
     */
    public Double getRating() {
        return (Double) get(5);
    }

    /**
     * Setter for <code>inquirio.users.PasswordHash</code>.
     */
    public void setPasswordhash(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>inquirio.users.PasswordHash</code>.
     */
    public String getPasswordhash() {
        return (String) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, String, String, String, Integer, Double, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, String, String, String, Integer, Double, String> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Users.USERS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Users.USERS.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Users.USERS.EMAIL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Users.USERS.TELEPHONE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return Users.USERS.ITEMSFOUNDCOUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field6() {
        return Users.USERS.RATING;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Users.USERS.PASSWORDHASH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getEmail();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getTelephone();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component5() {
        return getItemsfoundcount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component6() {
        return getRating();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getPasswordhash();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getEmail();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getTelephone();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getItemsfoundcount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value6() {
        return getRating();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getPasswordhash();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsersRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsersRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsersRecord value3(String value) {
        setEmail(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsersRecord value4(String value) {
        setTelephone(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsersRecord value5(Integer value) {
        setItemsfoundcount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsersRecord value6(Double value) {
        setRating(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsersRecord value7(String value) {
        setPasswordhash(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsersRecord values(Integer value1, String value2, String value3, String value4, Integer value5, Double value6, String value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UsersRecord
     */
    public UsersRecord() {
        super(Users.USERS);
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    public UsersRecord(Integer id, String name, String email, String telephone, Integer itemsfoundcount, Double rating, String passwordhash) {
        super(Users.USERS);

        set(0, id);
        set(1, name);
        set(2, email);
        set(3, telephone);
        set(4, itemsfoundcount);
        set(5, rating);
        set(6, passwordhash);
    }
}
