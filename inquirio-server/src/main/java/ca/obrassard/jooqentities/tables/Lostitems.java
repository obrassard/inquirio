/*
 * This file is generated by jOOQ.
 */
package ca.obrassard.jooqentities.tables;


import ca.obrassard.jooqentities.Indexes;
import ca.obrassard.jooqentities.Inquirio;
import ca.obrassard.jooqentities.Keys;
import ca.obrassard.jooqentities.tables.records.LostitemsRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Lostitems extends TableImpl<LostitemsRecord> {

    private static final long serialVersionUID = 848850753;

    /**
     * The reference instance of <code>inquirio.lostitems</code>
     */
    public static final Lostitems LOSTITEMS = new Lostitems();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LostitemsRecord> getRecordType() {
        return LostitemsRecord.class;
    }

    /**
     * The column <code>inquirio.lostitems.Id</code>.
     */
    public final TableField<LostitemsRecord, Integer> ID = createField("Id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>inquirio.lostitems.Title</code>.
     */
    public final TableField<LostitemsRecord, String> TITLE = createField("Title", org.jooq.impl.SQLDataType.VARCHAR(150).nullable(false), this, "");

    /**
     * The column <code>inquirio.lostitems.Description</code>.
     */
    public final TableField<LostitemsRecord, String> DESCRIPTION = createField("Description", org.jooq.impl.SQLDataType.VARCHAR(250).nullable(false), this, "");

    /**
     * The column <code>inquirio.lostitems.Reward</code>.
     */
    public final TableField<LostitemsRecord, Double> REWARD = createField("Reward", org.jooq.impl.SQLDataType.DOUBLE.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.DOUBLE)), this, "");

    /**
     * The column <code>inquirio.lostitems.Date</code>.
     */
    public final TableField<LostitemsRecord, Timestamp> DATE = createField("Date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>inquirio.lostitems.OwnerId</code>.
     */
    public final TableField<LostitemsRecord, Integer> OWNERID = createField("OwnerId", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>inquirio.lostitems.ItemHasBeenFound</code>.
     */
    public final TableField<LostitemsRecord, Byte> ITEMHASBEENFOUND = createField("ItemHasBeenFound", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>inquirio.lostitems.Longitude</code>.
     */
    public final TableField<LostitemsRecord, Double> LONGITUDE = createField("Longitude", org.jooq.impl.SQLDataType.DOUBLE.nullable(false), this, "");

    /**
     * The column <code>inquirio.lostitems.Lattitude</code>.
     */
    public final TableField<LostitemsRecord, Double> LATTITUDE = createField("Lattitude", org.jooq.impl.SQLDataType.DOUBLE.nullable(false), this, "");

    /**
     * The column <code>inquirio.lostitems.LocationName</code>.
     */
    public final TableField<LostitemsRecord, String> LOCATIONNAME = createField("LocationName", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>inquirio.lostitems.FinderID</code>.
     */
    public final TableField<LostitemsRecord, Integer> FINDERID = createField("FinderID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>inquirio.lostitems</code> table reference
     */
    public Lostitems() {
        this(DSL.name("lostitems"), null);
    }

    /**
     * Create an aliased <code>inquirio.lostitems</code> table reference
     */
    public Lostitems(String alias) {
        this(DSL.name(alias), LOSTITEMS);
    }

    /**
     * Create an aliased <code>inquirio.lostitems</code> table reference
     */
    public Lostitems(Name alias) {
        this(alias, LOSTITEMS);
    }

    private Lostitems(Name alias, Table<LostitemsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Lostitems(Name alias, Table<LostitemsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Lostitems(Table<O> child, ForeignKey<O, LostitemsRecord> key) {
        super(child, key, LOSTITEMS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Inquirio.INQUIRIO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.LOSTITEMS_FK_USERS_FINDERID, Indexes.LOSTITEMS_FK_USERS_OWNERID, Indexes.LOSTITEMS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<LostitemsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_LOSTITEMS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<LostitemsRecord> getPrimaryKey() {
        return Keys.KEY_LOSTITEMS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<LostitemsRecord>> getKeys() {
        return Arrays.<UniqueKey<LostitemsRecord>>asList(Keys.KEY_LOSTITEMS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<LostitemsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<LostitemsRecord, ?>>asList(Keys.FK_USERS_OWNERID, Keys.FK_USERS_FINDERID);
    }

    public Users fkUsersOwnerid() {
        return new Users(this, Keys.FK_USERS_OWNERID);
    }

    public Users fkUsersFinderid() {
        return new Users(this, Keys.FK_USERS_FINDERID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Lostitems as(String alias) {
        return new Lostitems(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Lostitems as(Name alias) {
        return new Lostitems(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Lostitems rename(String name) {
        return new Lostitems(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Lostitems rename(Name name) {
        return new Lostitems(name, null);
    }
}
